#!/usr/bin/env ruby

Dir["./app/**/*.rb"].each { |f| require f }
Dir["./lib/**/*.rb"].each { |f| require f }

Environment.environment = ENV["DB"] || "development"

zombie = %q{
NUGGGGGH MUST EAT BRAINS
                           \
                                .....
                               C C  /
                              /<   /
               ___ __________/_#__/
              /(- /(\_\________   \
              \ ) \ )_      \o     \
              /|\ /|\       |'     |
                            |     _|
                            /o   __\
                           / '     |
                          / /      |
                         /_/\______|
                        (   _(    <
                         \    \    \
                          \    \    |
                           \____\____\
                           ____\_\__\_\
                         /`   /`     o\
                         |___ |_______|.. .
}

def print_menu(training_paths)
  puts <<EOS
==============
TRAINING PATHS
==============
EOS
  training_paths.each_with_index do |training_path, index|
    puts "#{index + 1}. #{training_path.name}"
  end
end

def add_training_path
  puts "What training path do you want to add?"
  name = (gets || "").chomp
  training_path = TrainingPath.create(name: name)
  if training_path.new_record?
    puts training_path.errors
  else
    puts "#{name} has been added to the list of training paths"
  end
end

def view_training_path(training_paths, path_number)

  training_path = training_paths[path_number - 1]
  if training_path
    puts "We're headed down the path to #{training_path.name}!"
    training_path.skills.each_with_index do |skill, index|
      puts "#{index + 1}. #{skill.name}"
    end
  else
    puts "Sorry, training path #{path_number} doesn't exist."
  end
end

training_paths = TrainingPath.all

puts zombie
print_menu(training_paths)

command = gets.chomp

case command
when "add"
  add_training_path
when /\d+/
  view_training_path(training_paths, command.to_i)
else
  puts "I don't know the '#{command}' command."
end
